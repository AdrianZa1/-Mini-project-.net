@page "/calculadora"
@inject CalculadoraApp.ICalculadora ServicioCalculadora

<h3>Calculadora</h3>

<div class="calculator-container">
    <div class="calculator-display">@display</div>
    <div class="calculator-buttons">
        <button @onclick='() => Press("7")'>7</button>
        <button @onclick='() => Press("8")'>8</button>
        <button @onclick='() => Press("9")'>9</button>
        <button class="op" @onclick='() => Press("/")'>÷</button>

        <button @onclick='() => Press("4")'>4</button>
        <button @onclick='() => Press("5")'>5</button>
        <button @onclick='() => Press("6")'>6</button>
        <button class="op" @onclick='() => Press("*")'>×</button>

        <button @onclick='() => Press("1")'>1</button>
        <button @onclick='() => Press("2")'>2</button>
        <button @onclick='() => Press("3")'>3</button>
        <button class="op" @onclick='() => Press("-")'>−</button>

        <button @onclick='() => Press("0")'>0</button>
        <button @onclick='() => Press(".")'>.</button>
        <button class="eq" @onclick='Calculate'>=</button>
        <button class="op" @onclick='() => Press("+")'>+</button>

        <button class="clr" @onclick='Clear'>C</button>
    </div>
    @if (!string.IsNullOrEmpty(error))
    {
        <div style="color:red">@error</div>
    }
</div>

@code {
    private string display = "0";
    private string input = "";
    private string operador = "";
    private double? valorAnterior = null;
    private string error = string.Empty;

    void Press(string value)
    {
        error = string.Empty;
        if ("+-*/".Contains(value))
        {
            if (!string.IsNullOrEmpty(operador) && valorAnterior.HasValue && !string.IsNullOrEmpty(input))
            {
                Calculate();
                valorAnterior = double.TryParse(display, out var v) ? v : null;
            }
            else if (!valorAnterior.HasValue && !string.IsNullOrEmpty(input))
            {
                valorAnterior = double.TryParse(input, out var v) ? v : null;
            }
            operador = value;
            input = "";
        }
        else
        {
            if (input == "0" && value != ".")
                input = value;
            else
                input += value;
            display = input;
        }
    }

    void Calculate()
    {
        error = string.Empty;
        if (valorAnterior.HasValue && !string.IsNullOrEmpty(operador) && !string.IsNullOrEmpty(input))
        {
            double actual;
            if (!double.TryParse(input, out actual))
            {
                error = "Entrada inválida";
                return;
            }
            try
            {
                double resultado = operador switch
                {
                    "+" => ServicioCalculadora.Sumar(valorAnterior.Value, actual),
                    "-" => ServicioCalculadora.Restar(valorAnterior.Value, actual),
                    "*" => ServicioCalculadora.Multiplicar(valorAnterior.Value, actual),
                    "/" => ServicioCalculadora.Dividir(valorAnterior.Value, actual),
                    _ => 0
                };
                display = resultado.ToString();
                valorAnterior = resultado;
                input = "";
                operador = "";
            }
            catch (Exception ex)
            {
                error = ex.Message;
                display = "0";
                valorAnterior = null;
                input = "";
                operador = "";
            }
        }
    }

    void Clear()
    {
        display = "0";
        input = "";
        operador = "";
        valorAnterior = null;
        error = string.Empty;
    }
}

<style>
.calculator-container {
    max-width: 320px;
    margin: 40px auto;
    padding: 20px;
    border-radius: 12px;
    background: #f5f5f5;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}
.calculator-display {
    width: 100%;
    height: 48px;
    background: #222;
    color: #fff;
    font-size: 2rem;
    text-align: right;
    padding: 8px 12px;
    border-radius: 6px;
    margin-bottom: 16px;
    letter-spacing: 2px;
    box-sizing: border-box;
}
.calculator-buttons {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 10px;
}
.calculator-buttons button {
    font-size: 1.2rem;
    padding: 16px 0;
    border: none;
    border-radius: 6px;
    background: #e0e0e0;
    cursor: pointer;
    transition: background 0.2s;
}
.calculator-buttons button.op {
    background: #ffb74d;
    color: #fff;
}
.calculator-buttons button.eq {
    background: #4caf50;
    color: #fff;
}
.calculator-buttons button.clr {
    background: #e57373;
    color: #fff;
    grid-column: span 4;
}
.calculator-buttons button:hover {
    filter: brightness(0.95);
}
</style>
