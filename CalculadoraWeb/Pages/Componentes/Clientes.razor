@using CalculadoraWeb.Models
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Forms

<h4>Clientes</h4>
<button class="btn btn-primary mb-2" @onclick="ShowAddCliente">➕ Nuevo Cliente</button>

@if (showFormCliente)
{
    <EditForm Model="nuevoCliente" OnValidSubmit="AgregarCliente">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="mb-2">
            <label>Nombre:</label>
            <InputText @bind-Value="nuevoCliente.Nombre" class="form-control" />
        </div>
        <div class="mb-2">
            <label>Dirección:</label>
            <InputText @bind-Value="nuevoCliente.Direccion" class="form-control" />
        </div>
        <button class="btn btn-success" type="submit">Guardar</button>
        <button class="btn btn-secondary ms-2" type="button" @onclick="HideFormCliente">Cancelar</button>
    </EditForm>
}

@if (ClientesData == null)
{
    <p><em>Cargando clientes...</em></p>
}
else if (!ClientesData.Any())
{
    <p>No hay clientes registrados.</p>
}
else
{
    <table class="table table-bordered">
        <thead><tr><th>Id</th><th>Nombre</th><th>Dirección</th><th>Acciones</th></tr></thead>
        <tbody>
            @foreach (var c in ClientesData)
            {
                <tr>
                    <td>@c.Id</td>
                    <td>@c.Nombre</td>
                    <td>@c.Direccion</td>
                    <td>
                        <button class="btn btn-danger btn-sm" @onclick="() => EliminarCliente.InvokeAsync(c.Id)">Eliminar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    [Parameter] public List<ClienteDTOView>? ClientesData { get; set; }
    [Parameter] public EventCallback<int> EliminarCliente { get; set; }
    [Parameter] public EventCallback<ClienteDTO> AgregarClienteSubmit { get; set; }
    [Parameter] public string? ClienteError { get; set; }

    private ClienteDTO nuevoCliente = new();
    private bool showFormCliente = false;

    private void ShowAddCliente() => showFormCliente = true;
    private void HideFormCliente() => showFormCliente = false;

    private async Task AgregarCliente()
    {
        await AgregarClienteSubmit.InvokeAsync(nuevoCliente);
        showFormCliente = false;
    }
}
